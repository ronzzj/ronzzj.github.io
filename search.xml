<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[threejs]]></title>
    <url>%2F2019%2F07%2F17%2Fthreejs%2F</url>
    <content type="text"><![CDATA[Three.js 第一篇Three.js Three.js 是基于WebGL开发的。 Three.js 是基于web端的3d游戏引擎 Three 是指 3D(三维) Js是指JavaScript Three.js目录结构 Build目录 包含两个文件，three.js 和three.min.js 。这是three.js最终被引用的文件。一个已经压缩，一个没有压缩的js文件。 Docs目录 是three.js的帮助文档 Editor目录 一个类似3D-max的简单编辑程序，它能创建一些三维物体。 Examples目录 一些Demo Src目录 源代码目录，里面是所有源代码 Test目录 一些测试代码 Utils目录 ：存放一些脚本，python文件的工具目录。例如将3D-Max格式的模型转换为three.js特有的json模型。 .gitignore文件 Git工具的过滤文件 LICENSE文件 版权信息 开发工具 推荐WebStorm 调试工具 浏览器端调试 Three.js三大组件 场景 相机 渲染器 代码示例12345var scene = new THREE.Scene(); // 场景var camera = new THREE.PerspectiveCamera(75, window.innerWidth/window.innerHeight, 0.1, 1000);// 透视相机var renderer = new THREE.WebGLRenderer(); // 渲染器renderer.setSize(window.innerWidth, window.innerHeight); // 设置渲染器的大小为窗口的内宽度，也就是内容区的宽度document.body.appendChild(renderer.domElement); 完整示例1234567891011121314151617181920212223242526272829303132&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;title&gt;&lt;/title&gt; &lt;style&gt;canvas &#123; width: 100%; height: 100% &#125;&lt;/style&gt; &lt;script src="js/three.js"&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt; &lt;script&gt; var scene = new THREE.Scene(); var camera = new THREE.PerspectiveCamera(75, window.innerWidth/window.innerHeight, 0.1, 1000); var renderer = new THREE.WebGLRenderer(); renderer.setSize(window.innerWidth, window.innerHeight); document.body.appendChild(renderer.domElement); var geometry = new THREE.CubeGeometry(1,1,1); var material = new THREE.MeshBasicMaterial(&#123;color: 0x00ff00&#125;); var cube = new THREE.Mesh(geometry, material); scene.add(cube); camera.position.z = 5; function render() &#123; requestAnimationFrame(render); cube.rotation.x += 0.1; cube.rotation.y += 0.1; renderer.render(scene, camera); &#125; render(); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;]]></content>
      <categories>
        <category>three.js</category>
      </categories>
      <tags>
        <tag>three.js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[git速学]]></title>
    <url>%2F2019%2F07%2F07%2Fgit%E9%80%9F%E5%AD%A6%2F</url>
    <content type="text"><![CDATA[git基本命令 初始化仓库 初始当前文件夹 git init 指定文件夹初始化 git init FolderName 添加新文件 添加全部文件 git add . 添加指定文件 git add FileName 提交版本 提交到仓库 git commit -m &quot;注释信息&quot; 同时添加和add git commit -a -m &quot;注释信息&quot; 发布版本 克隆并发布 git clone ssh: example.url.git 发布版本 git push ssh: example.url.git 删除文件 git rm file 创建分支 git branch test 切换分支 git checkout test 删除分支 git branch -d test 合并分支 git merge test]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[git命令使用]]></title>
    <url>%2F2019%2F07%2F06%2Fgit%2F</url>
    <content type="text"><![CDATA[git init git add . git commit -m “项目描述” git remote add origin https://github.com/ronzzj/-BirckBracker.git git push origin master]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
</search>
