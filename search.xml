<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[网络基础知识]]></title>
    <url>%2F2020%2F08%2F23%2F%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%2F</url>
    <content type="text"><![CDATA[计算机网络基础学习url: https://www.runoob.com/w3cnote/summary-of-network.html 计算机网络概述计算机网络的核心内容的就是计算机网络协议。网络协议是为计算机设备之间的数据交换和通信，而建立的一套规则和约定的某种标准。TCP/IP是目前目前通用的网络协议。 网络层次划分OSI/RM模型（Open System Interconnection/Reference Model）特点： 自下而上 物理层（Physics Layer）、数据链路层（Data Link Layer）、网络层（Network Layer）、传输层（Transport Layer）、会话层（Session Layer）、表示层（Presentation Layer）、应用层（Application Layer） TCP/IP四层模型应用层、传输层、网络层、网络接口层 TCP/IP五层模型应用层、传输层、网络层、数据链路层、物理层 OSI/RM模型解析 物理层 激活、维持、关闭通信端点之间的机械特性、电气特性、功能特性以及过程特性。该层为上层协议提供了一个传输数据的可靠的物理媒体。简单的说，物理层确保原始的数据可在各种物理媒体上传输。物理层记住两个重要的设备名称，中继器（Repeater，也叫放大器）和集线器。 数据链路层 数据链路层在物理层提供的服务的基础上向网络层提供服务，其最基本的服务是将源自网络层来的数据可靠地传输到相邻节点的目标机网络层。为达到这一目的，数据链路必须具备一系列相应的功能，主要有：如何将数据组合成数据块，在数据链路层中称这种数据块为帧（frame），帧是数据链路层的传送单位；如何控制帧在物理信道上的传输，包括如何处理传输差错，如何调节发送速率以使与接收方相匹配；以及在两个网络实体之间提供数据链路通路的建立、维持和释放的管理。数据链路层在不可靠的物理介质上提供可靠的传输。该层的作用包括：物理地址寻址、数据的成帧、流量控制、数据的检错、重发等。 有关数据链路层的重要知识点： 1&gt; 数据链路层为网络层提供可靠的数据传输； 2&gt; 基本数据单位为帧； 3&gt; 主要的协议：以太网协议； 4&gt; 两个重要设备名称：网桥和交换机。 3）网络层（Network Layer） 网络层的目的是实现两个端系统之间的数据透明传送，具体功能包括寻址和路由选择、连接的建立、保持和终止等。它提供的服务使传输层不需要了解网络中的数据传输和交换技术。如果您想用尽量少的词来记住网络层，那就是”路径选择、路由及逻辑寻址”。 网络层中涉及众多的协议，其中包括最重要的协议，也是TCP/IP的核心协议——IP协议。IP协议非常简单，仅仅提供不可靠、无连接的传送服务。IP协议的主要功能有：无连接数据报传输、数据报路由选择和差错控制。与IP协议配套使用实现其功能的还有地址解析协议ARP、逆地址解析协议RARP、因特网报文协议ICMP、因特网组管理协议IGMP。具体的协议我们会在接下来的部分进行总结，有关网络层的重点为： 1&gt; 网络层负责对子网间的数据包进行路由选择。此外，网络层还可以实现拥塞控制、网际互连等功能； 2&gt; 基本数据单位为IP数据报； 3&gt; 包含的主要协议： IP协议（Internet Protocol，因特网互联协议）; ICMP协议（Internet Control Message Protocol，因特网控制报文协议）; ARP协议（Address Resolution Protocol，地址解析协议）; RARP协议（Reverse Address Resolution Protocol，逆地址解析协议）。 4&gt; 重要的设备：路由器 网络层 传输层 会话层 表示层 应用层]]></content>
      <tags>
        <tag>网络</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo指令]]></title>
    <url>%2F2020%2F08%2F09%2Fhexo%E6%8C%87%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[Hexo 博客Hexo 简介Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。 Hexo 环境配置 Node.js（8.10以上） git Hexo安装 全局安装 npm install -g hexo-cli 局部安装 npm install hexo Hexo建站 新建文件夹 123$ hexo init &lt;folder&gt;$ cd &lt;folder&gt;$ npm install 目录结构 1234567├── _config.yml 网站的配置信息，您可以在此配置大部分的参数。├── package.json 应用程序的信息。EJS, Stylus 和 Markdown renderer 已默认安装，您可以自由移除。├── scaffolds 模版文件夹。当您新建文章时，Hexo 会根据 scaffold 来建立文件。├── source 资源文件夹是存放用户资源的地方。| ├── _drafts | └── _posts 除 _posts 文件夹之外，开头命名为 _ (下划线)的文件 / 文件夹和隐藏的文件将会被忽略。└── themes 主题文件夹。Hexo 会根据主题来生成静态页面。 Hexo配置https://hexo.io/zh-cn/docs/configuration Hexo命令hexo init [folder] 新建项目文件夹，并初始化 hexo new [layout] &lt;title&gt; 新建文章 123-p, --path 自定义新文章的路径-r, --replace 如果存在同名文章，将其替换-s, --slug 文章的 Slug，作为新文章的文件名和发布后的 URL]]></content>
  </entry>
  <entry>
    <title><![CDATA[git速学]]></title>
    <url>%2F2019%2F07%2F07%2Fgit%E9%80%9F%E5%AD%A6%2F</url>
    <content type="text"><![CDATA[git基本命令 初始化仓库 初始当前文件夹 git init 指定文件夹初始化 git init FolderName 添加新文件 添加全部文件 git add . 添加指定文件 git add FileName 提交版本 提交到仓库 git commit -m &quot;注释信息&quot; 同时添加和add git commit -a -m &quot;注释信息&quot; 发布版本 克隆并发布 git clone ssh: example.url.git 发布版本 git push ssh: example.url.git 删除文件 git rm file 创建分支 git branch test 切换分支 git checkout test 删除分支 git branch -d test 合并分支 git merge test git init git add . git commit -m “项目描述” git remote add origin https://github.com/ronzzj/-BirckBracker.git git push origin master]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
</search>
