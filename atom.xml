<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>CODER</title>
  
  <subtitle>ronzzj</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://ronzzj.github.io/"/>
  <updated>2019-09-23T02:55:34.532Z</updated>
  <id>https://ronzzj.github.io/</id>
  
  <author>
    <name>ron</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>cobol.</title>
    <link href="https://ronzzj.github.io/2019/09/23/cobol/"/>
    <id>https://ronzzj.github.io/2019/09/23/cobol/</id>
    <published>2019-09-23T02:55:34.000Z</published>
    <updated>2019-09-23T02:55:34.532Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>threejs</title>
    <link href="https://ronzzj.github.io/2019/07/17/threejs/"/>
    <id>https://ronzzj.github.io/2019/07/17/threejs/</id>
    <published>2019-07-17T06:25:20.000Z</published>
    <updated>2019-07-17T06:37:56.150Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Three-js-第一篇"><a href="#Three-js-第一篇" class="headerlink" title="Three.js 第一篇"></a>Three.js 第一篇</h2><h3 id="Three-js"><a href="#Three-js" class="headerlink" title="Three.js"></a>Three.js</h3><ul><li>Three.js 是基于WebGL开发的。</li><li>Three.js 是基于web端的3d游戏引擎</li><li>Three 是指 3D(三维)</li><li>Js是指JavaScript</li></ul><h3 id="Three-js目录结构"><a href="#Three-js目录结构" class="headerlink" title="Three.js目录结构"></a>Three.js目录结构</h3><ul><li><h4 id="Build目录"><a href="#Build目录" class="headerlink" title="Build目录"></a>Build目录</h4><ul><li>包含两个文件，three.js 和three.min.js 。这是three.js最终被引用的文件。一个已经压缩，一个没有压缩的js文件。</li></ul></li><li><h4 id="Docs目录"><a href="#Docs目录" class="headerlink" title="Docs目录"></a>Docs目录</h4><ul><li>是three.js的帮助文档</li></ul></li><li><h4 id="Editor目录"><a href="#Editor目录" class="headerlink" title="Editor目录"></a>Editor目录</h4><ul><li>一个类似3D-max的简单编辑程序，它能创建一些三维物体。</li></ul></li><li><h4 id="Examples目录"><a href="#Examples目录" class="headerlink" title="Examples目录"></a>Examples目录</h4><ul><li>一些Demo</li></ul></li><li><h4 id="Src目录"><a href="#Src目录" class="headerlink" title="Src目录"></a>Src目录</h4><ul><li>源代码目录，里面是所有源代码</li></ul></li><li><h4 id="Test目录"><a href="#Test目录" class="headerlink" title="Test目录"></a>Test目录</h4><ul><li>一些测试代码</li></ul></li><li><h4 id="Utils目录"><a href="#Utils目录" class="headerlink" title="Utils目录"></a>Utils目录</h4><ul><li>：存放一些脚本，python文件的工具目录。例如将3D-Max格式的模型转换为three.js特有的json模型。</li></ul></li><li><h4 id="gitignore文件"><a href="#gitignore文件" class="headerlink" title=".gitignore文件"></a>.gitignore文件</h4><ul><li>Git工具的过滤文件</li></ul></li><li><h4 id="LICENSE文件"><a href="#LICENSE文件" class="headerlink" title="LICENSE文件"></a>LICENSE文件</h4><ul><li>版权信息</li></ul></li></ul><h3 id="开发工具"><a href="#开发工具" class="headerlink" title="开发工具"></a>开发工具</h3><ul><li>推荐WebStorm</li></ul><h3 id="调试工具"><a href="#调试工具" class="headerlink" title="调试工具"></a>调试工具</h3><ul><li>浏览器端调试</li></ul><h3 id="Three-js三大组件"><a href="#Three-js三大组件" class="headerlink" title="Three.js三大组件"></a>Three.js三大组件</h3><ul><li><h4 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h4></li><li><h4 id="相机"><a href="#相机" class="headerlink" title="相机"></a>相机</h4></li><li><h4 id="渲染器"><a href="#渲染器" class="headerlink" title="渲染器"></a>渲染器</h4></li></ul><h3 id="代码示例"><a href="#代码示例" class="headerlink" title="代码示例"></a>代码示例</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> scene = <span class="keyword">new</span> THREE.Scene();<span class="comment">// 场景</span></span><br><span class="line"><span class="keyword">var</span> camera = <span class="keyword">new</span> THREE.PerspectiveCamera(<span class="number">75</span>, <span class="built_in">window</span>.innerWidth/<span class="built_in">window</span>.innerHeight, <span class="number">0.1</span>, <span class="number">1000</span>);<span class="comment">// 透视相机</span></span><br><span class="line"><span class="keyword">var</span> renderer = <span class="keyword">new</span> THREE.WebGLRenderer();<span class="comment">// 渲染器</span></span><br><span class="line">renderer.setSize(<span class="built_in">window</span>.innerWidth, <span class="built_in">window</span>.innerHeight);<span class="comment">// 设置渲染器的大小为窗口的内宽度，也就是内容区的宽度</span></span><br><span class="line"><span class="built_in">document</span>.body.appendChild(renderer.domElement);</span><br></pre></td></tr></table></figure><h3 id="完整示例"><a href="#完整示例" class="headerlink" title="完整示例"></a>完整示例</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span>canvas &#123; width: 100%; height: 100% &#125;<span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/three.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> scene = <span class="keyword">new</span> THREE.Scene();</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> camera = <span class="keyword">new</span> THREE.PerspectiveCamera(<span class="number">75</span>, <span class="built_in">window</span>.innerWidth/<span class="built_in">window</span>.innerHeight, <span class="number">0.1</span>, <span class="number">1000</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> renderer = <span class="keyword">new</span> THREE.WebGLRenderer();</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        renderer.setSize(<span class="built_in">window</span>.innerWidth, <span class="built_in">window</span>.innerHeight);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.body.appendChild(renderer.domElement);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> geometry = <span class="keyword">new</span> THREE.CubeGeometry(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> material = <span class="keyword">new</span> THREE.MeshBasicMaterial(&#123;<span class="attr">color</span>: <span class="number">0x00ff00</span>&#125;);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> cube = <span class="keyword">new</span> THREE.Mesh(geometry, material); scene.add(cube);</span></span><br><span class="line">        camera.position.z = 5;</span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">render</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line">            requestAnimationFrame(render);</span><br><span class="line">            cube.rotation.x += 0.1;</span><br><span class="line">            cube.rotation.y += 0.1;</span><br><span class="line">            renderer.render(scene, camera);</span><br><span class="line">        &#125;</span><br><span class="line">        render();</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Three-js-第一篇&quot;&gt;&lt;a href=&quot;#Three-js-第一篇&quot; class=&quot;headerlink&quot; title=&quot;Three.js 第一篇&quot;&gt;&lt;/a&gt;Three.js 第一篇&lt;/h2&gt;&lt;h3 id=&quot;Three-js&quot;&gt;&lt;a href=&quot;#Three
      
    
    </summary>
    
    
      <category term="three.js" scheme="https://ronzzj.github.io/categories/three-js/"/>
    
    
      <category term="three.js" scheme="https://ronzzj.github.io/tags/three-js/"/>
    
  </entry>
  
  <entry>
    <title>ContextCapture</title>
    <link href="https://ronzzj.github.io/2019/07/17/ContextCapture/"/>
    <id>https://ronzzj.github.io/2019/07/17/ContextCapture/</id>
    <published>2019-07-17T06:22:16.000Z</published>
    <updated>2019-07-17T06:30:36.590Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Smart3D-Capture"><a href="#Smart3D-Capture" class="headerlink" title="Smart3D Capture"></a>Smart3D Capture</h2><h3 id="基于影像自动化进行三维模型构建的并行软件系统"><a href="#基于影像自动化进行三维模型构建的并行软件系统" class="headerlink" title="基于影像自动化进行三维模型构建的并行软件系统"></a>基于影像自动化进行三维模型构建的并行软件系统</h3><ul><li>建模对象：静态物体  </li><li>辅助信息：传感器属性、照片位置姿态参数、控制点等等</li><li>计算过程：空三、重建阶段的参数设置</li><li>输出结果：带有真实纹理的三维格网模型（实景真三维模型）</li></ul><h3 id="专业名词"><a href="#专业名词" class="headerlink" title="专业名词"></a>专业名词</h3><ul><li>Photogroup 影像组</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">由一组具有相同内方位元素的影像构成</span><br><span class="line"></span><br><span class="line">相机属性参数唯一（焦距、传感器尺寸、畸变等等</span><br></pre></td></tr></table></figure><ul><li>Photo（影像）</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">照片</span><br><span class="line"></span><br><span class="line">外方位元素（位置+角元素）</span><br></pre></td></tr></table></figure><ul><li>Component（影像组件）</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">有若干个影像组构成的连续立体像对</span><br></pre></td></tr></table></figure><ul><li>Block（区块）</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">同一测区的全部影像</span><br></pre></td></tr></table></figure><ul><li>影像内部坐标系</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ECEF(Earth Centered Earth Fixed)，标准全球笛卡尔坐标系 软件名词解释</span><br></pre></td></tr></table></figure><ul><li>AT(Aerotriangulation)</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">空三计算</span><br></pre></td></tr></table></figure><ul><li>Point</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Keypoint(关键点)、Tiepoint(连接点)、Control Point(控制点)</span><br></pre></td></tr></table></figure><ul><li>Reconstruction（重建）</li><li>Scene（场景）</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">虚拟的重建对象</span><br></pre></td></tr></table></figure><ul><li>Tile（瓦片）</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">构成场景的若干个大小相同的数据切块</span><br></pre></td></tr></table></figure><ul><li>重建坐标系</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ENU，一般是基于场景中心的地球切平面</span><br></pre></td></tr></table></figure><h3 id="Smart3D的软件组成"><a href="#Smart3D的软件组成" class="headerlink" title="Smart3D的软件组成"></a>Smart3D的软件组成</h3><ul><li>Master(主控台)Setting(设置)</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">setting: 一个中间媒介，它主要是帮助Engine指向任务的路径</span><br><span class="line">master: 一个非常好的人机交互界面，相当于一个管理者，它创建任务、管理任务、监视任务的精度等。</span><br></pre></td></tr></table></figure><ul><li>Engine(引擎)</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">只负责对所指向的Job Queue中任务进行处理，可以独立鱼Master打开或者关闭</span><br></pre></td></tr></table></figure><ul><li>Viewer(浏览)</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">可预览生成的三维场景和模型</span><br></pre></td></tr></table></figure><h3 id="Samrt3D主控台"><a href="#Samrt3D主控台" class="headerlink" title="Samrt3D主控台"></a>Samrt3D主控台</h3><ul><li>导入数据集</li><li>定义处理过程设置</li><li>提交作业任务</li><li>监控作业任务进度</li><li>浏览处理结果。</li></ul><h3 id="主控台工作流"><a href="#主控台工作流" class="headerlink" title="主控台工作流"></a>主控台工作流</h3><ul><li><p>工程 (Project)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">一个工程管理者所有与它对应场景相关的处理数据，工程包含一个或多个区块作为子项</span><br></pre></td></tr></table></figure></li><li><p>区块(Block)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">一个区块管理者一系列用于一个或多个三维重建的输入图像与其属性信息，这些信息包括传感器尺寸、焦距、主点、透镜畸变以及位置与旋转等姿态信息。</span><br></pre></td></tr></table></figure></li><li><p>重建(Reconstructioin)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">一个重建管理用于启动一个或多个场景制作的三维重建框架</span><br></pre></td></tr></table></figure></li><li><p>生产(Production)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">一个生产管理三维模型的生成，还包括错误反馈、进度报告、模型导入等功能。</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Smart3D-Capture&quot;&gt;&lt;a href=&quot;#Smart3D-Capture&quot; class=&quot;headerlink&quot; title=&quot;Smart3D Capture&quot;&gt;&lt;/a&gt;Smart3D Capture&lt;/h2&gt;&lt;h3 id=&quot;基于影像自动化进行三维模型
      
    
    </summary>
    
    
      <category term="倾斜摄影" scheme="https://ronzzj.github.io/categories/%E5%80%BE%E6%96%9C%E6%91%84%E5%BD%B1/"/>
    
    
      <category term="smart3D" scheme="https://ronzzj.github.io/tags/smart3D/"/>
    
  </entry>
  
  <entry>
    <title>倾斜摄影</title>
    <link href="https://ronzzj.github.io/2019/07/17/%E5%80%BE%E6%96%9C%E6%91%84%E5%BD%B1/"/>
    <id>https://ronzzj.github.io/2019/07/17/倾斜摄影/</id>
    <published>2019-07-17T06:18:34.000Z</published>
    <updated>2019-07-17T06:30:36.590Z</updated>
    
    <content type="html"><![CDATA[<h2 id="倾斜摄影"><a href="#倾斜摄影" class="headerlink" title="倾斜摄影"></a>倾斜摄影</h2><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>倾斜摄影测量技术是国际测绘遥感领域近年发展起来的一项高新技术，利用照片进行三维重建成为一项关键性的技术。</p><h3 id="数据处理的流程"><a href="#数据处理的流程" class="headerlink" title="数据处理的流程"></a>数据处理的流程</h3><ul><li>数据采集获取</li><li>数据预处理，POS解算整理、影像检查、影像调整</li><li>内业数据生产，相对定向</li><li>外业数据生产，绝对定向</li><li>内业数据生产，空中三角测量（AT）、3d模型重建、3d产品提交</li></ul><h3 id="倾斜摄影模型实现单体化的技术思路"><a href="#倾斜摄影模型实现单体化的技术思路" class="headerlink" title="倾斜摄影模型实现单体化的技术思路"></a>倾斜摄影模型实现单体化的技术思路</h3><ul><li>最直观的思路，就是用建筑物、道路、树木等对应的矢量面，对倾斜摄影模型进行切割，即把连续的三角面片网从物理上分割开，从而实现单体化。我们可以称之为“切割单体化”。</li><li>利用模型的三角面片中每个顶点额外的存储空间，把对应的矢量面的ID值存储起来；即一个建筑所对应的三角面片的所有顶点，都存储了同一个ID值，从而实现在鼠标选中这个建筑时，该建筑可以呈现出高亮的效果。这个可以称之为“ID单体化”。其实就是让同一个建筑模型上，都存储上同一个id值。从而在三维gis中呈现出鼠标点击后，能高亮显示这个建筑物</li><li>这样的单体化全部是基于倾斜模型的自动化进行，由于这样的单体化都事先需要准备好地物所对应的矢量底面，因此在数据的准备工作上并没有差别。不同的是：切割单体化是用完矢量面之后就可以扔了；ID单体化需要留着矢量面做属性查询；这样的单体化是进行的单个模型的提取。</li></ul><h3 id="数据质量精度评判标准"><a href="#数据质量精度评判标准" class="headerlink" title="数据质量精度评判标准"></a>数据质量精度评判标准</h3><p>倾斜摄影测量技术能够提供三维点云、三维模型、真正射影像( TDOM) 、数字表面模型( DSM) 等多种成果形式，其中三维模型具备真实、细致、具体的特点，通常称为真三维模型。我们可以将这种实景三维模型当做一种新的基础地理数据来进行精度评定，包括位置精度、几何精度和纹理精度3 个方面。</p><ul><li>位置精度，三维模型的位置精度评定跟空三的物方精度评定有类似之处，通过比对加密点和检查点的精度进行衡量。在控制点周边比较平坦的区域，精度比对容易进行; 在房角、墙线、陡坎等几何特征变化大的地方，模型上的采点误差比较大，精度衡量可靠性降低，可以联合影像作业，得到最终的成果矢量或模型数据再进行比对。</li><li>几何精度，传统手工建模可以自由设计地物的几何形状，而真三维建模，影像重叠度越大的地方纹理越全，三维的几何特征就越完整。反之，影像重叠不够可能出现破面、漏面、悬空、拉花等情况，影响地物几何信息的完整表达。这种属于原理性问题，无法完全避免，可以按照下面的方法进行评定。在三维模型浏览软件中参照航拍角度固定浏览视角，同时拉伸到分辨率相符的高度去查看模型，看不出明显变形、拉花即可判定为合格，反之为不合格。</li><li>纹理精度，倾斜三维建模完全依靠计算机来自动匹配地物的纹理信息，由于原始影像质量不同，导致匹配结果可能存在色彩不一致、明暗度不一致、纹理不清晰等情况。要提高纹理精度就必须提高参加匹配的影像质量，剔除存在云雾遮挡覆盖、镜头反光、地物阴影、大面积相似纹理、分辨率变化异常等问题像片，提高匹配计算的准确度。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;倾斜摄影&quot;&gt;&lt;a href=&quot;#倾斜摄影&quot; class=&quot;headerlink&quot; title=&quot;倾斜摄影&quot;&gt;&lt;/a&gt;倾斜摄影&lt;/h2&gt;&lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h
      
    
    </summary>
    
    
      <category term="倾斜摄影" scheme="https://ronzzj.github.io/categories/%E5%80%BE%E6%96%9C%E6%91%84%E5%BD%B1/"/>
    
    
      <category term="倾斜摄影" scheme="https://ronzzj.github.io/tags/%E5%80%BE%E6%96%9C%E6%91%84%E5%BD%B1/"/>
    
  </entry>
  
  <entry>
    <title>git速学</title>
    <link href="https://ronzzj.github.io/2019/07/07/git%E9%80%9F%E5%AD%A6/"/>
    <id>https://ronzzj.github.io/2019/07/07/git速学/</id>
    <published>2019-07-07T14:18:51.000Z</published>
    <updated>2019-07-07T14:21:26.830Z</updated>
    
    <content type="html"><![CDATA[<h2 id="git基本命令"><a href="#git基本命令" class="headerlink" title="git基本命令"></a>git基本命令</h2><ul><li><p>初始化仓库  </p><ol><li><p>初始当前文件夹  </p><p><code>git init</code>   </p></li><li><p>指定文件夹初始化 </p><p><code>git  init FolderName</code></p></li></ol></li><li><p>添加新文件  </p><ol><li><p>添加全部文件</p><p><code>git add .</code></p></li><li><p>添加指定文件</p><p><code>git add FileName</code></p></li></ol></li><li><p>提交版本</p><ol><li><p>提交到仓库</p><p><code>git commit -m &quot;注释信息&quot;</code> </p></li><li><p>同时添加和add</p><p><code>git commit -a -m &quot;注释信息&quot;</code></p></li></ol></li><li><p>发布版本</p><ol><li><p>克隆并发布</p><p><code>git clone ssh: example.url.git</code></p></li><li><p>发布版本</p><p><code>git push ssh: example.url.git</code></p></li></ol></li><li><p>删除文件</p><p><code>git rm file</code></p></li><li><p>创建分支</p><p><code>git branch test</code></p></li><li><p>切换分支</p><p><code>git checkout test</code></p></li><li><p>删除分支</p><p><code>git branch -d test</code></p></li><li><p>合并分支</p><p><code>git merge test</code></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;git基本命令&quot;&gt;&lt;a href=&quot;#git基本命令&quot; class=&quot;headerlink&quot; title=&quot;git基本命令&quot;&gt;&lt;/a&gt;git基本命令&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;初始化仓库  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;初始当前文件夹  &lt;/p&gt;
&lt;p&gt;
      
    
    </summary>
    
    
      <category term="git" scheme="https://ronzzj.github.io/categories/git/"/>
    
    
      <category term="git" scheme="https://ronzzj.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>git命令使用</title>
    <link href="https://ronzzj.github.io/2019/07/06/git/"/>
    <id>https://ronzzj.github.io/2019/07/06/git/</id>
    <published>2019-07-06T04:09:40.000Z</published>
    <updated>2019-07-06T04:14:12.300Z</updated>
    
    <content type="html"><![CDATA[<ul><li>git init</li><li>git add .</li><li>git commit -m “项目描述”</li><li>git remote add origin <a href="https://github.com/ronzzj/-BirckBracker.git" target="_blank" rel="noopener">https://github.com/ronzzj/-BirckBracker.git</a></li><li>git push origin master</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;git init&lt;/li&gt;
&lt;li&gt;git add .&lt;/li&gt;
&lt;li&gt;git commit -m “项目描述”&lt;/li&gt;
&lt;li&gt;git remote add origin &lt;a href=&quot;https://github.com/ronzzj/-BirckB
      
    
    </summary>
    
    
      <category term="git" scheme="https://ronzzj.github.io/categories/git/"/>
    
    
      <category term="git" scheme="https://ronzzj.github.io/tags/git/"/>
    
  </entry>
  
</feed>
